<!--
  Right now, the android app is hard coded to look for /cmd_vel as the input
  topic.
 -->
<launch>
  <arg name="cmd_vel_topic"               default="/teleop/cmd_vel"/>
  <arg name="compressed_image_topic"      default="/teleop/compressed_image"/>
  <arg name="3d_sensor"                   default="$(env ROCH_3D_SENSOR)"/>  <!-- kinect, asus_xtion_pro, r200 -->
  <arg name="2d_laser"                    default="$(env ROCH_LASER)"/>  <!-- ls01c, rplidar -->
  <arg name="2d_laser_enabled"		      default="$(env ROCH_LASER_ENABLE)"/> <!-- if add 2d laser or not -->
  <arg name="3d_sensor_enabled"		      default="$(env ROCH_3D_SENSOR_ENABLE)"/> <!-- if add 3d sensor or not  -->
  <arg name="3d_sensor_nav_enabled"		  default="$(env ROCH_3D_SENSOR_NAV_ENABLE)"/> <!-- if add 3d sensor for navigation -->

  <arg if="$(arg 2d_laser_enabled)"  name="scan_topic" value="scan_filtered"/>
  <arg unless="$(arg 2d_laser_enabled)" name="scan_topic" value="scan"/>

  
  <include file="$(find roch_bringup)/launch/sensor.launch">
    <arg name="rgb_processing" value="true" />
    <arg name="depth_registration" value="false" />
    <arg name="depth_processing" value="false" />
    <arg name="3d_sensor_nav_enabled" value="$(arg 3d_sensor_nav_enabled)"/>
  </include>

  <!-- Make a slower camera feed available. -->
  <!-- *********************** Teleoperation ********************** -->
  <param name="camera/rgb/image_color/compressed/jpeg_quality" value="22"/>
  <node pkg="topic_tools" type="throttle" name="camera_throttle" args="messages camera/rgb/image_rect_color/compressed 5"/>

  <node pkg="nodelet" type="nodelet" name="teleop_velocity_smoother"
        args="load yocs_velocity_smoother/VelocitySmootherNodelet /mobile_base_nodelet_manager">
    <rosparam file="$(find roch_bringup)/param/smoother.yaml" command="load"/>
    <remap from="teleop_velocity_smoother/raw_cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="teleop_velocity_smoother/smooth_cmd_vel" to="twist_mux/keyboard_teleop/cmd_vel"/>

    <!-- Robot velocity feedbacks; use the one configured as base default -->
    <remap from="teleop_velocity_smoother/odometry"       to="/odom"/>
    <remap from="teleop_velocity_smoother/robot_cmd_vel"  to="/roch_velocity_controller/cmd_vel"/>
  </node>

  <!-- *********************** Optimisation *********************** -->
  <node pkg="tf" type="tf_change_notifier" name="tf_throttle_for_android_gui">
    <param name="polling_frequency"             value="5"/>
    <param name="translational_update_distance" value="-1"/>
    <param name="angular_update_distance"       value="-1"/>
    <rosparam param="frame_pairs">
      - {source_frame: base_footprint, target_frame: map}
      - {source_frame: camera_depth_frame, target_frame: map}
    </rosparam>
  </node>


  <!-- *************************** Navi *************************** -->
  <!--- Run move_base -->
  <include file="$(find roch_navigation)/launch/move_base.launch">
    <arg name="3d_sensor"                     value="$(arg 3d_sensor)"/>
    <arg name="2d_laser"                      value="$(arg 2d_laser)"/> 
    <arg name="2d_laser_enabled"		      value="$(arg 2d_laser_enabled)"/> 
    <arg name="3d_sensor_enabled"		      value="$(arg 3d_sensor_enabled)"/> 
    <arg name="3d_sensor_nav_enabled"		  value="$(arg 3d_sensor_nav_enabled)"/>
    <arg name="odom_topic"                    value="/odom" />
  </include>
  <!--- Run gmapping -->
  <group if="$(arg 3d_sensor_enabled)">
    <group if="$(arg 3d_sensor_nav_enabled)">
      <include file="$(find roch_navigation)/launch/includes/$(arg 3d_sensor)_amcl.launch" >
        <arg name="use_map_topic" value ="false"/>
      </include>
	</group>
  </group>
  <group if="$(arg 2d_laser_enabled)">
    <group unless="$(arg 3d_sensor_nav_enabled)">
      <include file="$(find roch_navigation)/launch/includes/$(arg 2d_laser)_amcl.launch" >
        <arg name="use_map_topic" value ="false"/>
      </include>
    </group>
  </group>
 <!--
  <node pkg="topic_tools" type="throttle" name="relay_compressed_throttle_image" args="messages camera/rgb/image_rect_color/compressed_throttle 5 $(arg compressed_image_topic)" required="true">
    <param name="lazy" value="false"/>
  </node>
  <node pkg="topic_tools" type="throttle" name="relay_scan" args="messages scan 5 $(arg scan_topic)" required="true">
    <param name="lazy" value="false"/>
  </node>
-->
  <!-- Maps -->
  <arg name="map_file" default=" $(env ROCH_MAP_FILE)" />
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

<!-- 27017 is default, use a private one to avoid error 48 conflicts -->
<!--
  <param name="warehouse_host" value="localhost"/>
  <param name="warehouse_port" value="27018"/>
  <node name="mongo" type="mongo_wrapper_ros.py" pkg="warehouse_ros" output="log">
    <param name="db_path"        value="warehouse_data"/>
    <param name="overwrite"      value="false"/>
  </node>
-->
<!--  <node pkg="map_store" type="map_manager" name="map_manager" output="screen"/>-->

  <!-- World Canvas -->
  <arg name="debug" default="false"/>
  <node pkg="world_canvas_server" type="world_canvas_server" name="world_canvas_server" args="$(arg debug)" output="screen">
    <param name="start_map_manager" value="true"/>
    <param name="auto_save_map" value="false"/>
  </node> 
</launch>
